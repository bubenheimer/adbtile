plugins {
    alias(libs.plugins.android.application)
}

android {
    namespace 'org.bubenheimer.adbtile'

    buildFeatures {
        buildConfig true
    }

    setCompileSdkVersion libs.versions.android.sdk.compile.get().toInteger()

    defaultConfig {
        minSdkVersion libs.versions.android.sdk.min.get()
        targetSdkVersion libs.versions.android.sdk.target.get()
        versionName '1.2'
        versionCode 5
    }

    signingConfigs {
        release {
            readKeystoreProperties('release')
        }
    }

    compileOptions {
        sourceCompatibility libs.versions.java.get()
        targetCompatibility libs.versions.java.get()
    }

    buildTypes {
        release {
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

def readKeystoreProperties(def configName) {
    def propsFile = file('file:///' + KEYSTORE_PROPERTIES_FILE)

    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        android.signingConfigs[configName].storeFile = file(props['storeFile'])
        android.signingConfigs[configName].storePassword = props['storePassword']
        android.signingConfigs[configName].keyAlias = props['keyAlias']
        android.signingConfigs[configName].keyPassword = props['keyPassword']
    }
}
